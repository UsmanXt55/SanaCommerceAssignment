// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SanaCommerceAssignment.ConfigurableEditor.API.DataContext;

#nullable disable

namespace SanaCommerceAssignment.ConfigurableEditor.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("SanaCommerceAssignment.ConfigurableEditor.API.Models.Entities.TemplateEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("FieldId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("field_id");

                    b.Property<string>("FieldTitle")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("field_title");

                    b.Property<string>("PageId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("page_id");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_templates");

                    b.ToTable("templates", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
